{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\n  },\n  reducers: {\n    addToCart: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const itemIndex = state.cartItems.findIndex(item => item._id == payload._id);\n\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].qty += 1;\n      } else {\n        const choosenItem = { ...payload,\n          qty: 1\n        };\n        state.cartItems.push(choosenItem);\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    removeFromCart: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const cartItemsClone = [...state.cartItems];\n      const newCartItems = cartItemsClone.filter(item => item.id != payload.id);\n      state.cartItems = newCartItems;\n      localStorage.setItem(\"cart-items\", JSON.stringify(state.cartItems));\n    },\n    decreaseQty: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      const cartItemsClone = [...state.cartItems];\n      const itemIndex = cartItemsClone.findIndex(item => item._id == payload._id);\n\n      if (itemIndex >= 0) {\n        if (state.cartItems[itemIndex].qty > 1) state.cartItems[itemIndex].qty -= 1;else if (state.cartItems[itemIndex].qty == 1) {\n          const newCartItems = cartItemsClone.filter(item => item._id != payload._id);\n          state.cartItems = newCartItems;\n        }\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  decreaseQty\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cartItems","localStorage","getItem","JSON","parse","reducers","addToCart","state","payload","itemIndex","findIndex","item","_id","qty","choosenItem","push","setItem","stringify","removeFromCart","cartItemsClone","newCartItems","filter","id","decreaseQty","actions","reducer"],"sources":["C:/Users/PC'S/Desktop/Nouveau dossier/ecommerce mahdi/client/src/redux/features/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    cartItems: localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [],\r\n  },\r\n  reducers: {\r\n    addToCart: (state, { payload }) => {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        (item) => item._id == payload._id\r\n      );\r\n      if (itemIndex >= 0) {\r\n        state.cartItems[itemIndex].qty += 1;\r\n      } else {\r\n        const choosenItem = { ...payload, qty: 1 };\r\n        state.cartItems.push(choosenItem);\r\n      }\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n    },\r\n    removeFromCart: (state, { payload }) => {\r\n      const cartItemsClone = [...state.cartItems];\r\n      const newCartItems = cartItemsClone.filter(\r\n        (item) => item.id != payload.id\r\n      );\r\n      state.cartItems = newCartItems;\r\n      localStorage.setItem(\"cart-items\", JSON.stringify(state.cartItems));\r\n    },\r\n    decreaseQty: (state, { payload }) => {\r\n      const cartItemsClone = [...state.cartItems];\r\n      const itemIndex = cartItemsClone.findIndex(\r\n        (item) => item._id == payload._id\r\n      );\r\n      if (itemIndex >= 0) {\r\n        if (state.cartItems[itemIndex].qty > 1)\r\n          state.cartItems[itemIndex].qty -= 1;\r\n        else if (state.cartItems[itemIndex].qty == 1) {\r\n          const newCartItems = cartItemsClone.filter(\r\n            (item) => item._id != payload._id\r\n          );\r\n          state.cartItems = newCartItems;\r\n        }\r\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n      }\r\n    },\r\n  },\r\n});\r\nexport const { addToCart, removeFromCart, decreaseQty } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP;EAHQ,CAFc;EAO5BG,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAD,WAAwB;MAAA,IAAhB;QAAEC;MAAF,CAAgB;MACjC,MAAMC,SAAS,GAAGF,KAAK,CAACP,SAAN,CAAgBU,SAAhB,CACfC,IAAD,IAAUA,IAAI,CAACC,GAAL,IAAYJ,OAAO,CAACI,GADd,CAAlB;;MAGA,IAAIH,SAAS,IAAI,CAAjB,EAAoB;QAClBF,KAAK,CAACP,SAAN,CAAgBS,SAAhB,EAA2BI,GAA3B,IAAkC,CAAlC;MACD,CAFD,MAEO;QACL,MAAMC,WAAW,GAAG,EAAE,GAAGN,OAAL;UAAcK,GAAG,EAAE;QAAnB,CAApB;QACAN,KAAK,CAACP,SAAN,CAAgBe,IAAhB,CAAqBD,WAArB;MACD;;MACDb,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAeV,KAAK,CAACP,SAArB,CAAlC;IACD,CAZO;IAaRkB,cAAc,EAAE,CAACX,KAAD,YAAwB;MAAA,IAAhB;QAAEC;MAAF,CAAgB;MACtC,MAAMW,cAAc,GAAG,CAAC,GAAGZ,KAAK,CAACP,SAAV,CAAvB;MACA,MAAMoB,YAAY,GAAGD,cAAc,CAACE,MAAf,CAClBV,IAAD,IAAUA,IAAI,CAACW,EAAL,IAAWd,OAAO,CAACc,EADV,CAArB;MAGAf,KAAK,CAACP,SAAN,GAAkBoB,YAAlB;MACAnB,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCb,IAAI,CAACc,SAAL,CAAeV,KAAK,CAACP,SAArB,CAAnC;IACD,CApBO;IAqBRuB,WAAW,EAAE,CAAChB,KAAD,YAAwB;MAAA,IAAhB;QAAEC;MAAF,CAAgB;MACnC,MAAMW,cAAc,GAAG,CAAC,GAAGZ,KAAK,CAACP,SAAV,CAAvB;MACA,MAAMS,SAAS,GAAGU,cAAc,CAACT,SAAf,CACfC,IAAD,IAAUA,IAAI,CAACC,GAAL,IAAYJ,OAAO,CAACI,GADd,CAAlB;;MAGA,IAAIH,SAAS,IAAI,CAAjB,EAAoB;QAClB,IAAIF,KAAK,CAACP,SAAN,CAAgBS,SAAhB,EAA2BI,GAA3B,GAAiC,CAArC,EACEN,KAAK,CAACP,SAAN,CAAgBS,SAAhB,EAA2BI,GAA3B,IAAkC,CAAlC,CADF,KAEK,IAAIN,KAAK,CAACP,SAAN,CAAgBS,SAAhB,EAA2BI,GAA3B,IAAkC,CAAtC,EAAyC;UAC5C,MAAMO,YAAY,GAAGD,cAAc,CAACE,MAAf,CAClBV,IAAD,IAAUA,IAAI,CAACC,GAAL,IAAYJ,OAAO,CAACI,GADX,CAArB;UAGAL,KAAK,CAACP,SAAN,GAAkBoB,YAAlB;QACD;QACDnB,YAAY,CAACe,OAAb,CAAqB,WAArB,EAAkCb,IAAI,CAACc,SAAL,CAAeV,KAAK,CAACP,SAArB,CAAlC;MACD;IACF;EArCO;AAPkB,CAAD,CAA7B;AA+CA,OAAO,MAAM;EAAEM,SAAF;EAAaY,cAAb;EAA6BK;AAA7B,IAA6C1B,SAAS,CAAC2B,OAA7D;AACP,eAAe3B,SAAS,CAAC4B,OAAzB"},"metadata":{},"sourceType":"module"}